# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle with Docker

on:
  pull_request:
    branches: [ "dev" ]


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          

    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew
      working-directory: ${{ secrets.WORKINGDIRECTORY }}


    - name: Test with Gradle
      run: ./gradlew build
      working-directory: ${{ secrets.WORKINGDIRECTORY }}


    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - name: Build with Gradle Wrapper
      run: ./gradlew clean build
      working-directory: ${{ secrets.WORKINGDIRECTORY }}


    - name: Verify .jar file existence
      run: ls -la ./${{ secrets.WorkingDirectory }}/build/libs/


    - name: Upload test results
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: ${{ secrets.WORKINGDIRECTORY }}/build/test-results/test




