#last

name: Docker Image CD

on:
  push:
    branches: [ "dockerwork" ]

#dddd
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew
      working-directory: ${{ secrets.WORKINGDIRECTORY }}

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - name: Build with Gradle Wrapper
      run: ./gradlew clean build
      working-directory: ${{ secrets.WORKINGDIRECTORY }}

    # - name : git 워크스페이스 검사
    #   run : echo $GITHUB_WORKSPACE
    #   working-directory: $GITHUB_WORKSPACE


    # - name: List build directory contents
    #   run: ls -la ${{ secrets.WORKINGDIRECTORY }}//build/libs/
    #   working-directory: ${{ secrets.WORKINGDIRECTORY }}

    # - name: Copy JAR file to build context
    #   run: |
    #     mkdir $GITHUB_WORKSPACE/be/build/libs && \
    #     cp ${{ secrets.WORKINGDIRECTORY }}/build/libs/*.jar $GITHUB_WORKSPACE/be/tastyhub/build/libs
    #     ls $GITHUB_WORKSPACE/be/tastyhub/build/libs/

    # - name: 모든 루트 폴더 검사
    #   run : find . -type f -name "*.jar"
    #   working-directory: $GITHUB_WORKSPACE


    - name: List build directory contents
      run: ls -R
      working-directory: ${{ secrets.WORKINGDIRECTORY }}


  push:
    runs-on: ubuntu-latest
    needs: build

    steps:
    # - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_REPOSITORY_USERNAME }}
        password: ${{ secrets.DOCKER_REPOSITORY }}

    - name: check file path
      run: ls -R

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ${{ secrets.WORKINGDIRECTORY }}
        push: true
        tags: ${{ secrets.DOCKER_REPOSITORY_USERNAME }}/tastyhub:${{ github.sha }}, ${{ secrets.DOCKER_REPOSITORY_USERNAME }}/tastyhub:latest
        
      # run: |
      #   docker buildx build --push \
      #     --tag ${{ secrets.DOCKER_REPOSITORY_USERNAME }}/tastyhub:latest \
      #     --tag ${{ secrets.DOCKER_REPOSITORY_USERNAME }}/tastyhub:${{ github.sha }} \
      #     --file ${{ secrets.WORKINGDIRECTORY }}/Dockerfile \
      #     ${{ secrets.WORKINGDIRECTORY }}
